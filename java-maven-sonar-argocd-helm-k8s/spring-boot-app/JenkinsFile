pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        SONAR_URL = "http://10.10.127.185:9000"
        DOCKER_REGISTRY = "docker.io"
    }

    stages {
        stage('Checkout') {
            steps {
                echo "Checking out source code..."
                //git branch: 'main', url: 'https://github.com/nikhil-ra0/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Prepare JDK 17') {
            steps {
                sh '''
                    # Install Java 17 dynamically
                    yum install -y java-17-openjdk-devel
                    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk
                    export PATH=$JAVA_HOME/bin:$PATH
                    java -version
                    javac -version
                '''
            }
        }

        stage('Build and Test') {
            steps {
                dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        sh "mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}"
                    }
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                        script {
                            def dockerImage = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
                            sh "docker build -t ${dockerImage} ."
                            sh "docker login -u ${DOCKER_USER} -p ${DOCKER_PASS} ${DOCKER_REGISTRY}"
                            sh "docker push ${dockerImage}"
                        }
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "nikhilrao@gmail.com"
                        git config user.name "Nikhil Rao"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/nikhil-ra0/Jenkins-Zero-To-Hero HEAD:main
                    '''
                }
            }
        }
    }
}
